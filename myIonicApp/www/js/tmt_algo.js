/**
 * Created by Tevil on 2016/7/4.
 */
/**
 * 对象说明：
 * 需要包含头文件<script src="../build/tracking-min.js"></script>
 * 使用方法：
 *     var img1 = document.getElementById("test1");//获取两张图
 *     var img2 = document.getElementById("test2");
 *     var detect_test = Object.create(Detect);//新建一个对象
 *     detect_test.loadImage(img1,img2);//载入两张图像
 *     detect_test.Match();//进行匹配
 *     detect_test.showResult();//显示匹配结果
 * @type {{image1: {RGB: null, Gray: null, Width: null, Data: null, KeyPoints: null, Descriptors: null}, image2: {RGB: null, Gray: null, Width: null, Data: null, KeyPoints: null, Descriptors: null}, canvas: {element: null, name: null, context: null}, matches: null, loadImage: Detect.loadImage, createCanvas: Detect.createCanvas, drawToCanvas: Detect.drawToCanvas, getImageData: Detect.getImageData, Match: Detect.Match, drawResult: Detect.drawResult}}
 */
var Detect ={
  image1:{
    RGB:null,
    Gray:null,
    Width:null,
    Data:null,
    KeyPoints:null,
    Descriptors:null
  },
  image2:{
    RGB:null,
    Gray:null,
    Width:null,
    Data:null,
    KeyPoints:null,
    Descriptors:null
  },
  canvas:{
    element:null,
    name:null,
    context:null
  },
  matches:null,
//载入两张图像，生成并绘制一个hidden的canvas
  loadImage:function (img1,img2) {
    this.image1.RGB = img1;
    this.image2.RGB = img2;
    this.image1.Width = img1.width;
    this.image1.Height = img1.height;
    this.image2.Width = img2.width;
    this.image2.Height = img2.height;
    this.canvas.name = "canvas_"+Math.random();
  //create a canvas to draw the two images
    this.createCanvas(this.canvas.name);
    this.drawToCanvas();
  },
  //生成一个Canvas
  createCanvas:function (canvas_name) {
    var createDiv=document.createElement("canvas");
    createDiv.style.background="pink";
    createDiv.width=this.image1.Width+this.image2.Width;
    createDiv.height=Math.max(this.image1.Height,this.image2.Height);
    createDiv.id= canvas_name;
    createDiv.hidden = true;
    document.body.appendChild(createDiv);
    this.canvas.element = document.getElementById(canvas_name);
  },
  drawToCanvas:function () {
    this.canvas.context = this.canvas.element.getContext("2d");
    this.canvas.context.drawImage(this.image1.RGB,0,0);
    this.canvas.context.drawImage(this.image2.RGB,this.image1.Width,0);
  },
  getImageData:function () {
    this.image1.Data = this.canvas.context.getImageData(0,0,this.image1.Width,this.image1.Height);
    this.image2.Data = this.canvas.context.getImageData(this.image1.Width,0,this.image2.Width,this.image2.Height);

  },
  Match:function () {
    this.getImageData();
    tracking.Brief.N = 256;
    //transfer image data to gray image.arg:data,width,height,store to color image or gray image ,false for gray
    this.image1.Gray = tracking.Image.grayscale(this.image1.Data.data,this.image1.Width,this.image1.Height,false);
    this.image2.Gray = tracking.Image.grayscale(this.image2.Data.data,this.image2.Width,this.image2.Height,false);

    //calc corners
    this.image1.KeyPoints = tracking.Fast.findCorners(this.image1.Gray,this.image1.Width,this.image1.Height);
    this.image2.KeyPoints = tracking.Fast.findCorners(this.image2.Gray,this.image2.Width,this.image2.Height);

    //cal brief descriptors
    this.image1.Descriptors = tracking.Brief.getDescriptors(this.image1.Gray,this.image1.Width,this.image1.KeyPoints);
    this.image2.Descriptors = tracking.Brief.getDescriptors(this.image2.Gray,this.image2.Width,this.image2.KeyPoints);

    //do the match
    this.matches = tracking.Brief.reciprocalMatch(this.image1.KeyPoints,this.image1.Descriptors,this.image2.KeyPoints,this.image2.Descriptors);
    //sort by confidence from big to small
    this.matches.sort(function(a, b) {
      return b.confidence - a.confidence;
    });
    return this.matches;
  },
  showResult:function () {
    var matches = this.matches;
    for (var i = 0; i < Math.min(30, matches.length); i++) {
      var color = '#' + Math.floor(Math.random()*16777215).toString(16);//a random color
      this.canvas.context.fillStyle = color;
      this.canvas.context.strokeStyle = color;
      this.canvas.context.fillRect(matches[i].keypoint1[0], matches[i].keypoint1[1], 4, 4);
      this.canvas.context.fillRect(matches[i].keypoint2[0] + this.image1.Width, matches[i].keypoint2[1], 4, 4);

      this.canvas.context.beginPath();
      this.canvas.context.moveTo(matches[i].keypoint1[0], matches[i].keypoint1[1]);
      this.canvas.context.lineTo(matches[i].keypoint2[0] + this.image1.Width, matches[i].keypoint2[1]);
      this.canvas.context.stroke();
    }
    this.canvas.element.hidden=false;
    return matches;
  }
};
/**
 * 继承自Detect的对象，用来提取图像特征
 * 使用方法：
 *       var img1 = document.getElementById("test1");//获取图像
 *       var ef = Object.create(ExtractFeatures);//创建对象
 *       ef.loadImage(img1);//载入图像
 *       var features = ef.getFeatures();//获取特征
 *       var json_kp = JSON.stringify(features.KeyPoints);//将两个特征转换为json格式
 *       var json_dp = JSON.stringify(features.Descriptors);
 * @type {Detect}
 */
var ExtractFeatures = Object.create(Detect);//从Detect继承过来
ExtractFeatures = {
  test:1,
  loadImage:function (img) {
    Detect.image1.RGB = img;
    Detect.image1.Width = img.width;
    Detect.image1.Height = img.height;
    Detect.canvas.name = "canvas_"+Math.random();
    //create a canvas to draw the two images
    this.createCanvas(Detect.canvas.name);
    this.drawToCanvas();
  },
  createCanvas:function (canvas_name) {
    var createDiv=document.createElement("canvas");
    createDiv.style.background="pink";
    createDiv.width=Detect.image1.Width;
    createDiv.height=Math.max(Detect.image1.Height);
    createDiv.id= canvas_name;
    createDiv.hidden = true;
    document.body.appendChild(createDiv);
    Detect.canvas.element = document.getElementById(canvas_name);
  },
  drawToCanvas:function(){
    Detect.canvas.context = Detect.canvas.element.getContext("2d");
    Detect.canvas.context.drawImage(Detect.image1.RGB,0,0);
  },
  getImageData:function () {
    Detect.image1.Data = Detect.canvas.context.getImageData(0,0,Detect.image1.Width,Detect.image1.Height);
  },
  getFeatures:function () {
    //this.getImageData();
    Detect.image1.Data = Detect.canvas.context.getImageData(0,0,Detect.image1.Width,Detect.image1.Height);

    tracking.Brief.N = 256;
    //transfer image data to gray image.arg:data,width,height,store to color image or gray image ,false for gray
    Detect.image1.Gray = tracking.Image.grayscale(Detect.image1.Data.data,Detect.image1.Width,Detect.image1.Height,false);
    //calc corners
    Detect.image1.KeyPoints = tracking.Fast.findCorners(Detect.image1.Gray,Detect.image1.Width,Detect.image1.Height);

    tracking.Brief.randomWindowOffsets_ ={
      "0": 11,
      "1": 9,
      "2": 11,
      "3": -11,
      "4": 14,
      "5": 15,
      "6": 10,
      "7": -1,
      "8": -6,
      "9": -12,
      "10": 14,
      "11": -5,
      "12": 0,
      "13": 12,
      "14": 10,
      "15": -11,
      "16": 0,
      "17": -13,
      "18": 3,
      "19": 9,
      "20": 10,
      "21": 6,
      "22": 16,
      "23": 6,
      "24": 5,
      "25": -6,
      "26": -7,
      "27": 5,
      "28": 4,
      "29": -3,
      "30": -12,
      "31": -8,
      "32": 7,
      "33": 16,
      "34": -10,
      "35": 3,
      "36": 8,
      "37": 14,
      "38": 9,
      "39": 0,
      "40": -12,
      "41": -12,
      "42": -9,
      "43": 13,
      "44": -12,
      "45": -14,
      "46": -7,
      "47": -7,
      "48": -12,
      "49": -10,
      "50": -7,
      "51": 7,
      "52": 6,
      "53": -3,
      "54": 8,
      "55": -4,
      "56": 5,
      "57": -6,
      "58": 0,
      "59": 6,
      "60": -1,
      "61": 12,
      "62": -9,
      "63": 16,
      "64": -13,
      "65": -13,
      "66": -10,
      "67": 15,
      "68": -5,
      "69": 0,
      "70": 5,
      "71": 15,
      "72": 7,
      "73": 7,
      "74": -11,
      "75": 15,
      "76": -4,
      "77": 7,
      "78": -9,
      "79": 6,
      "80": 2,
      "81": 12,
      "82": -10,
      "83": -2,
      "84": -11,
      "85": -8,
      "86": 5,
      "87": 7,
      "88": -10,
      "89": -7,
      "90": 3,
      "91": 10,
      "92": -1,
      "93": -8,
      "94": 2,
      "95": -6,
      "96": -1,
      "97": -14,
      "98": -9,
      "99": -13,
      "100": 15,
      "101": 12,
      "102": 11,
      "103": 9,
      "104": 9,
      "105": -4,
      "106": 8,
      "107": 10,
      "108": 6,
      "109": 12,
      "110": 3,
      "111": 12,
      "112": -6,
      "113": -14,
      "114": -2,
      "115": -4,
      "116": -9,
      "117": -9,
      "118": -11,
      "119": -3,
      "120": -8,
      "121": 8,
      "122": -5,
      "123": -12,
      "124": -7,
      "125": 8,
      "126": 9,
      "127": -7,
      "128": -11,
      "129": 7,
      "130": -10,
      "131": -1,
      "132": 1,
      "133": -4,
      "134": -14,
      "135": 14,
      "136": 3,
      "137": 1,
      "138": 8,
      "139": -4,
      "140": 8,
      "141": -6,
      "142": 10,
      "143": -6,
      "144": 1,
      "145": 8,
      "146": -5,
      "147": -14,
      "148": -8,
      "149": 0,
      "150": 2,
      "151": 3,
      "152": -9,
      "153": 14,
      "154": -1,
      "155": -2,
      "156": 8,
      "157": 2,
      "158": 15,
      "159": -13,
      "160": 1,
      "161": -10,
      "162": 8,
      "163": 5,
      "164": 3,
      "165": -1,
      "166": -5,
      "167": 5,
      "168": -12,
      "169": 14,
      "170": -3,
      "171": -6,
      "172": 11,
      "173": 2,
      "174": -6,
      "175": 9,
      "176": -1,
      "177": 7,
      "178": 11,
      "179": -7,
      "180": -10,
      "181": -3,
      "182": -7,
      "183": 16,
      "184": 11,
      "185": 3,
      "186": 14,
      "187": 8,
      "188": -12,
      "189": 15,
      "190": -4,
      "191": 2,
      "192": -9,
      "193": 11,
      "194": -12,
      "195": 1,
      "196": 13,
      "197": -6,
      "198": 0,
      "199": 7,
      "200": 8,
      "201": 11,
      "202": 3,
      "203": -13,
      "204": -7,
      "205": 12,
      "206": 9,
      "207": 10,
      "208": -8,
      "209": 5,
      "210": 10,
      "211": -7,
      "212": 14,
      "213": 5,
      "214": -2,
      "215": -10,
      "216": 13,
      "217": -5,
      "218": -1,
      "219": -7,
      "220": -14,
      "221": -14,
      "222": 7,
      "223": 2,
      "224": -7,
      "225": -14,
      "226": 13,
      "227": 11,
      "228": -4,
      "229": 1,
      "230": 9,
      "231": -8,
      "232": 13,
      "233": -6,
      "234": -8,
      "235": -11,
      "236": -8,
      "237": 8,
      "238": -12,
      "239": 13,
      "240": -1,
      "241": 8,
      "242": 9,
      "243": -15,
      "244": 6,
      "245": -11,
      "246": -6,
      "247": 10,
      "248": -2,
      "249": 12,
      "250": 1,
      "251": 11,
      "252": -14,
      "253": -5,
      "254": -7,
      "255": -2,
      "256": 16,
      "257": 16,
      "258": -9,
      "259": -9,
      "260": 6,
      "261": 14,
      "262": 15,
      "263": 9,
      "264": -9,
      "265": -8,
      "266": 13,
      "267": 3,
      "268": 8,
      "269": -6,
      "270": 12,
      "271": 15,
      "272": 6,
      "273": -12,
      "274": 13,
      "275": -5,
      "276": 2,
      "277": -13,
      "278": -5,
      "279": 13,
      "280": -11,
      "281": -11,
      "282": 10,
      "283": -14,
      "284": 10,
      "285": -8,
      "286": 10,
      "287": 1,
      "288": -2,
      "289": 12,
      "290": -5,
      "291": 4,
      "292": -15,
      "293": 12,
      "294": 10,
      "295": 13,
      "296": 1,
      "297": 12,
      "298": -8,
      "299": 11,
      "300": -4,
      "301": 4,
      "302": 13,
      "303": -3,
      "304": -13,
      "305": 14,
      "306": 0,
      "307": -10,
      "308": 9,
      "309": -1,
      "310": -4,
      "311": 6,
      "312": -9,
      "313": -11,
      "314": 8,
      "315": 11,
      "316": 2,
      "317": 9,
      "318": 5,
      "319": 15,
      "320": -2,
      "321": -12,
      "322": -4,
      "323": 3,
      "324": -8,
      "325": -1,
      "326": -2,
      "327": -8,
      "328": -10,
      "329": -10,
      "330": -7,
      "331": 3,
      "332": 16,
      "333": -6,
      "334": -12,
      "335": 12,
      "336": -11,
      "337": 0,
      "338": 7,
      "339": -10,
      "340": 2,
      "341": -5,
      "342": -12,
      "343": 5,
      "344": -2,
      "345": 11,
      "346": 13,
      "347": -14,
      "348": -11,
      "349": -9,
      "350": 13,
      "351": 10,
      "352": 7,
      "353": -6,
      "354": 7,
      "355": 15,
      "356": 9,
      "357": 3,
      "358": -10,
      "359": 15,
      "360": 0,
      "361": -8,
      "362": 15,
      "363": -6,
      "364": -1,
      "365": 0,
      "366": 2,
      "367": 7,
      "368": -3,
      "369": -14,
      "370": 1,
      "371": 13,
      "372": -11,
      "373": 1,
      "374": 11,
      "375": 3,
      "376": 5,
      "377": 11,
      "378": -5,
      "379": -3,
      "380": -2,
      "381": -5,
      "382": -2,
      "383": 7,
      "384": -13,
      "385": -3,
      "386": -4,
      "387": 0,
      "388": -4,
      "389": 10,
      "390": 5,
      "391": -8,
      "392": -9,
      "393": -6,
      "394": 8,
      "395": 14,
      "396": 9,
      "397": -1,
      "398": -13,
      "399": 7,
      "400": 13,
      "401": -5,
      "402": -3,
      "403": 8,
      "404": -14,
      "405": 11,
      "406": -2,
      "407": 2,
      "408": 10,
      "409": 11,
      "410": 6,
      "411": -7,
      "412": 14,
      "413": 3,
      "414": -10,
      "415": -9,
      "416": 12,
      "417": 5,
      "418": -14,
      "419": 3,
      "420": -8,
      "421": -6,
      "422": -6,
      "423": -10,
      "424": -7,
      "425": 10,
      "426": -12,
      "427": -14,
      "428": 1,
      "429": 1,
      "430": -10,
      "431": -11,
      "432": 2,
      "433": 7,
      "434": -9,
      "435": 14,
      "436": -14,
      "437": -13,
      "438": -5,
      "439": -7,
      "440": 12,
      "441": -13,
      "442": 4,
      "443": -11,
      "444": 6,
      "445": 14,
      "446": 15,
      "447": -1,
      "448": 14,
      "449": 6,
      "450": 10,
      "451": -1,
      "452": 9,
      "453": 3,
      "454": -14,
      "455": 0,
      "456": -5,
      "457": 2,
      "458": 3,
      "459": -14,
      "460": -3,
      "461": -6,
      "462": -7,
      "463": -12,
      "464": 0,
      "465": 2,
      "466": -8,
      "467": -14,
      "468": 1,
      "469": 13,
      "470": 10,
      "471": -4,
      "472": -4,
      "473": 10,
      "474": -8,
      "475": 1,
      "476": -4,
      "477": -7,
      "478": 4,
      "479": 6,
      "480": 10,
      "481": -13,
      "482": -12,
      "483": -3,
      "484": -1,
      "485": 1,
      "486": -4,
      "487": -14,
      "488": 9,
      "489": -10,
      "490": -12,
      "491": 12,
      "492": -6,
      "493": 16,
      "494": 3,
      "495": 15,
      "496": 0,
      "497": -13,
      "498": -8,
      "499": 12,
      "500": -9,
      "501": -12,
      "502": 7,
      "503": 15,
      "504": 15,
      "505": 2,
      "506": 7,
      "507": -5,
      "508": 12,
      "509": -12,
      "510": -2,
      "511": 12,
      "512": -1,
      "513": 14,
      "514": 14,
      "515": -6,
      "516": 8,
      "517": -4,
      "518": -8,
      "519": 10,
      "520": 13,
      "521": -6,
      "522": -3,
      "523": -14,
      "524": 5,
      "525": -13,
      "526": -5,
      "527": -2,
      "528": 9,
      "529": -6,
      "530": 1,
      "531": 5,
      "532": 0,
      "533": -13,
      "534": 3,
      "535": 15,
      "536": 3,
      "537": 13,
      "538": 3,
      "539": -14,
      "540": -12,
      "541": 7,
      "542": -14,
      "543": -14,
      "544": 14,
      "545": -8,
      "546": 2,
      "547": 13,
      "548": 1,
      "549": -3,
      "550": -11,
      "551": 1,
      "552": 2,
      "553": -5,
      "554": 13,
      "555": 10,
      "556": 13,
      "557": 8,
      "558": 13,
      "559": 8,
      "560": -11,
      "561": 9,
      "562": 7,
      "563": 5,
      "564": 11,
      "565": -13,
      "566": -8,
      "567": 13,
      "568": -11,
      "569": -5,
      "570": 3,
      "571": -12,
      "572": 8,
      "573": -12,
      "574": 1,
      "575": 16,
      "576": -3,
      "577": 2,
      "578": 5,
      "579": 5,
      "580": 14,
      "581": 3,
      "582": 4,
      "583": -14,
      "584": -4,
      "585": -11,
      "586": 8,
      "587": -9,
      "588": -5,
      "589": -14,
      "590": -8,
      "591": -5,
      "592": -1,
      "593": 2,
      "594": -2,
      "595": 0,
      "596": 2,
      "597": -7,
      "598": 2,
      "599": -3,
      "600": -12,
      "601": 7,
      "602": 9,
      "603": 1,
      "604": 2,
      "605": -6,
      "606": -6,
      "607": 1,
      "608": 14,
      "609": -11,
      "610": 3,
      "611": 5,
      "612": -2,
      "613": 15,
      "614": 16,
      "615": 3,
      "616": 16,
      "617": 8,
      "618": -7,
      "619": 13,
      "620": 9,
      "621": -9,
      "622": 8,
      "623": 0,
      "624": 13,
      "625": 0,
      "626": 13,
      "627": -7,
      "628": 7,
      "629": -15,
      "630": -5,
      "631": 14,
      "632": -10,
      "633": 10,
      "634": 14,
      "635": 11,
      "636": -10,
      "637": 11,
      "638": 0,
      "639": 4,
      "640": -9,
      "641": -2,
      "642": -4,
      "643": -6,
      "644": 13,
      "645": 15,
      "646": 14,
      "647": 11,
      "648": -7,
      "649": 4,
      "650": -9,
      "651": 14,
      "652": 16,
      "653": 11,
      "654": 10,
      "655": 9,
      "656": 1,
      "657": 8,
      "658": -4,
      "659": 13,
      "660": 6,
      "661": -11,
      "662": -6,
      "663": -5,
      "664": -9,
      "665": 6,
      "666": -4,
      "667": 14,
      "668": 8,
      "669": -14,
      "670": -7,
      "671": 13,
      "672": -13,
      "673": 15,
      "674": -6,
      "675": 12,
      "676": 14,
      "677": -1,
      "678": 6,
      "679": -11,
      "680": 6,
      "681": 3,
      "682": -10,
      "683": 6,
      "684": -4,
      "685": -13,
      "686": -14,
      "687": 15,
      "688": -13,
      "689": -13,
      "690": -1,
      "691": -9,
      "692": -6,
      "693": -12,
      "694": -3,
      "695": -2,
      "696": 1,
      "697": 5,
      "698": -3,
      "699": 13,
      "700": -15,
      "701": -12,
      "702": 12,
      "703": -1,
      "704": -11,
      "705": -3,
      "706": 12,
      "707": -1,
      "708": 9,
      "709": -7,
      "710": -10,
      "711": 0,
      "712": 9,
      "713": 1,
      "714": 14,
      "715": 15,
      "716": 7,
      "717": 9,
      "718": 1,
      "719": 4,
      "720": -1,
      "721": -12,
      "722": 11,
      "723": -11,
      "724": -5,
      "725": 5,
      "726": 4,
      "727": -2,
      "728": 14,
      "729": 9,
      "730": -7,
      "731": 12,
      "732": -2,
      "733": -14,
      "734": 4,
      "735": -8,
      "736": 0,
      "737": 1,
      "738": -9,
      "739": -9,
      "740": -8,
      "741": -3,
      "742": 13,
      "743": 15,
      "744": -9,
      "745": 14,
      "746": 0,
      "747": 0,
      "748": -15,
      "749": -13,
      "750": 9,
      "751": 3,
      "752": 10,
      "753": -1,
      "754": 11,
      "755": -8,
      "756": -6,
      "757": 5,
      "758": -14,
      "759": 11,
      "760": 14,
      "761": 2,
      "762": -9,
      "763": 10,
      "764": 2,
      "765": 15,
      "766": -8,
      "767": 15,
      "768": 3,
      "769": 14,
      "770": 7,
      "771": -1,
      "772": -8,
      "773": 13,
      "774": -9,
      "775": 13,
      "776": 10,
      "777": -10,
      "778": 7,
      "779": 0,
      "780": 5,
      "781": 6,
      "782": 3,
      "783": -11,
      "784": -12,
      "785": -3,
      "786": -2,
      "787": 7,
      "788": -14,
      "789": 7,
      "790": -8,
      "791": -8,
      "792": 14,
      "793": -4,
      "794": -13,
      "795": -7,
      "796": 8,
      "797": 12,
      "798": -2,
      "799": -6,
      "800": 14,
      "801": 12,
      "802": 1,
      "803": 14,
      "804": 7,
      "805": 10,
      "806": 7,
      "807": 6,
      "808": 5,
      "809": 1,
      "810": 3,
      "811": -8,
      "812": 16,
      "813": 3,
      "814": -5,
      "815": 6,
      "816": -12,
      "817": 13,
      "818": -13,
      "819": -14,
      "820": -10,
      "821": -11,
      "822": -14,
      "823": -8,
      "824": 2,
      "825": -15,
      "826": 11,
      "827": -9,
      "828": -13,
      "829": -10,
      "830": 5,
      "831": 6,
      "832": 7,
      "833": 1,
      "834": 5,
      "835": 10,
      "836": -4,
      "837": -6,
      "838": -13,
      "839": 9,
      "840": 2,
      "841": -12,
      "842": 9,
      "843": -1,
      "844": -2,
      "845": -4,
      "846": 9,
      "847": -8,
      "848": -9,
      "849": 11,
      "850": -9,
      "851": 11,
      "852": 9,
      "853": 6,
      "854": 13,
      "855": -10,
      "856": 15,
      "857": -15,
      "858": 9,
      "859": 10,
      "860": -8,
      "861": -9,
      "862": -15,
      "863": -10,
      "864": -10,
      "865": -12,
      "866": -4,
      "867": 11,
      "868": 7,
      "869": -12,
      "870": -2,
      "871": 5,
      "872": -1,
      "873": 0,
      "874": 6,
      "875": 9,
      "876": 6,
      "877": -4,
      "878": -11,
      "879": -5,
      "880": -14,
      "881": 14,
      "882": 15,
      "883": 0,
      "884": 9,
      "885": 15,
      "886": -13,
      "887": 15,
      "888": 12,
      "889": -4,
      "890": 11,
      "891": 11,
      "892": 11,
      "893": 4,
      "894": -3,
      "895": 7,
      "896": 14,
      "897": -1,
      "898": 6,
      "899": 7,
      "900": -15,
      "901": 13,
      "902": 13,
      "903": 5,
      "904": 2,
      "905": 6,
      "906": -7,
      "907": 15,
      "908": 3,
      "909": -13,
      "910": -13,
      "911": 14,
      "912": -14,
      "913": -9,
      "914": -7,
      "915": 6,
      "916": -9,
      "917": 15,
      "918": 5,
      "919": -13,
      "920": -11,
      "921": 10,
      "922": 3,
      "923": -14,
      "924": 15,
      "925": 2,
      "926": -14,
      "927": 16,
      "928": 13,
      "929": 2,
      "930": 4,
      "931": 0,
      "932": -1,
      "933": -2,
      "934": 9,
      "935": -4,
      "936": -11,
      "937": -12,
      "938": 3,
      "939": 16,
      "940": 10,
      "941": 0,
      "942": -4,
      "943": -3,
      "944": -14,
      "945": -9,
      "946": -4,
      "947": -6,
      "948": -11,
      "949": 5,
      "950": -13,
      "951": 13,
      "952": 6,
      "953": 10,
      "954": -6,
      "955": 5,
      "956": -3,
      "957": 11,
      "958": -13,
      "959": -9,
      "960": -1,
      "961": 8,
      "962": -5,
      "963": -11,
      "964": -3,
      "965": -11,
      "966": 3,
      "967": -7,
      "968": -5,
      "969": 6,
      "970": -13,
      "971": 13,
      "972": 9,
      "973": 4,
      "974": -3,
      "975": -11,
      "976": -3,
      "977": 13,
      "978": -13,
      "979": 2,
      "980": -14,
      "981": -10,
      "982": 11,
      "983": -6,
      "984": 6,
      "985": 10,
      "986": 8,
      "987": 4,
      "988": -1,
      "989": 10,
      "990": 4,
      "991": -15,
      "992": -9,
      "993": -11,
      "994": 12,
      "995": -12,
      "996": -7,
      "997": -2,
      "998": 3,
      "999": -13,
      "1000": 16,
      "1001": 5,
      "1002": 12,
      "1003": 14,
      "1004": -4,
      "1005": -9,
      "1006": -10,
      "1007": 3,
      "1008": -10,
      "1009": -3,
      "1010": 14,
      "1011": -12,
      "1012": 8,
      "1013": 7,
      "1014": 11,
      "1015": -8,
      "1016": -1,
      "1017": 15,
      "1018": 13,
      "1019": 5,
      "1020": -5,
      "1021": 5,
      "1022": -10,
      "1023": -4
    }

    //cal brief descriptors
    Detect.image1.Descriptors = tracking.Brief.getDescriptors(Detect.image1.Gray,Detect.image1.Width,Detect.image1.KeyPoints);
    var output_features={
      KeyPoints:Detect.image1.KeyPoints,
      Descriptors:Detect.image1.Descriptors
    };
    return output_features;
  }
};

var MultiDetect = Object.create(ExtractFeatures);

MultiDetect = {
  features:null,
  LoadScnImage:function (scn_image) {
    ExtractFeatures.loadImage(scn_image);
    var scn_feature = ExtractFeatures.getFeatures();
  },
  LoadFeatures:function (features) {
    this.features = features;
  },
  MatchAllfeatures:function () {
    for(x in this.features)
    {
      var matches = tracking.Brief.reciprocalMatch(
          Detect.image1.KeyPoints,
          Detect.image1.Descriptors,
          this.features[x]["keypoints"],
          this.features[x]["descriptors"]);
      //sort by confidence from big to small
      matches.sort(function(a, b) {
        return b.confidence - a.confidence;
      });
      //TODO:提取前10~50的confidence并排序
    }
  }
};

